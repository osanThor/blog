name: Deploy
on:
  push:
    branches:
      - main

env:
  S3_BUCKET_NAME: til-web
  CODE_DEPLOY_APPLICATION_NAME: til_web
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: til_fe_dev
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code.
        uses: actions/checkout@v3

      - name: Check Node v
        run: node -v

      - name: Cache node modules
        uses: actions/cache@v3
        id: cache
        with:
          # node_modules라는 폴더를 검사하여
          path: node_modules
          # 아래 키값으로 cache가 돼있는지 확인합니다.
          key: npm-packages-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Build
        run: |
          yarn build
        env:
          NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}
          NEXT_PUBLIC_DATA_REPO: ${{ secrets.NEXT_PUBLIC_DATA_REPO }}
          NEXT_PUBLIC_DATA_REPO_ID: ${{ secrets.NEXT_PUBLIC_DATA_REPO_ID }}
          NEXT_PUBLIC_DATA_CATEGORY: ${{ secrets.NEXT_PUBLIC_DATA_CATEGORY }}
          NEXT_PUBLIC_DATA_CATEGORY_ID: ${{ secrets.NEXT_PUBLIC_DATA_CATEGORY_ID }}
          NAVER_SITE_VERIFICATION: ${{ secrets.NAVER_SITE_VERIFICATION }}
          GOOGLE_SITE_VERIFICATION: ${{ secrets.GOOGLE_SITE_VERIFICATION }}
          NEXT_PUBLIC_GOOGLE_ANALYTICS: ${{ secrets.NEXT_PUBLIC_GOOGLE_ANALYTICS }}
          NODE_ENV: ${{ secrets.NODE_ENV }}

      - name: zip create
        run: |
          zip -qq -r --symlinks  ./til-dev.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: |
          aws s3 cp --region ap-northeast-2 ./til-dev.zip s3://given-myworksbucket/til-dev.zip

      - name: Deploy For Development
        run: |
          aws deploy create-deployment \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=given-myworksbucket,key=til-dev.zip,bundleType=zip
